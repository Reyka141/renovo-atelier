'use client';

import { useStore } from '@/hooks';
import { useCounterStore } from '@/providers/counter-store-provider';
import { CounterStore } from '@/types';

export const Counter = () => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ö—É–∫ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å persist –≤ Next.js
    const storeData = useStore(useCounterStore, (state) => state) as CounterStore | undefined;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–æ–∫–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å (–ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –≥–∏–¥—Ä–∞—Ç–∞—Ü–∏–∏)
    if (!storeData) {
        return (
            <div className="mx-auto flex max-w-md flex-col items-center space-y-6 rounded-lg bg-white p-8 shadow-lg dark:bg-gray-800">
                <div className="text-2xl font-bold text-gray-800 dark:text-white">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—á–µ—Ç—á–∏–∫–∞...</div>
                <div className="h-8 w-8 animate-spin rounded-full border-b-2 border-blue-600"></div>
            </div>
        );
    }

    const { count, incrementCount, decrementCount, resetCount } = storeData!;

    return (
        <div className="mx-auto flex max-w-md flex-col items-center space-y-6 rounded-lg bg-white p-8 shadow-lg dark:bg-gray-800">
            <h2 className="text-2xl font-bold text-gray-800 dark:text-white">–°—á–µ—Ç—á–∏–∫ —Å Zustand</h2>

            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞ */}
            <div className="font-mono text-6xl font-bold text-blue-600 dark:text-blue-400">{count}</div>

            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <div className="flex space-x-4">
                <button
                    onClick={decrementCount}
                    className="rounded-lg bg-red-500 px-6 py-3 font-semibold text-white shadow-md transition-colors duration-200 hover:bg-red-600 hover:shadow-lg"
                >
                    -
                </button>

                <button
                    onClick={resetCount}
                    className="rounded-lg bg-gray-500 px-6 py-3 font-semibold text-white shadow-md transition-colors duration-200 hover:bg-gray-600 hover:shadow-lg"
                >
                    –°–±—Ä–æ—Å
                </button>

                <button
                    onClick={incrementCount}
                    className="rounded-lg bg-green-500 px-6 py-3 font-semibold text-white shadow-md transition-colors duration-200 hover:bg-green-600 hover:shadow-lg"
                >
                    +
                </button>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div className="text-center text-sm text-gray-600 dark:text-gray-300">
                <p>–°–æ—Å—Ç–æ—è–Ω–∏–µ —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ Zustand —Å persist</p>
                <p className="mt-1 mb-2 text-xs">üîí –ó–Ω–∞—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ localStorage</p>
                <p className="text-xs">
                    {count === 0 && '–°—á–µ—Ç—á–∏–∫ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏–∏'}
                    {count > 0 && `–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: +${count}`}
                    {count < 0 && `–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${count}`}
                </p>
            </div>
        </div>
    );
};
